;
; ClockIN PIO program for Raspberry Pi Pico
; 
; This PIO program listens to an input clock signal and timestamps
; transitions with a resolution of 50ns. Timestamps are stored in a FIFO
; buffer for further processing.
;

.program clockIN
.define PUBLIC PIN_CLOCK 0       ; Input pin for clock signal
.define PUBLIC TIMESTAMP_RES 50  ; Timestamp resolution in nanoseconds

.wrap_target
    wait 1 pin PIN_CLOCK         ; Wait for rising edge
    mov x, osr                   ; Get current timestamp (OSR is preloaded with system time)
    push                         ; Push timestamp to FIFO
    wait 0 pin PIN_CLOCK         ; Wait for falling edge
    mov x, osr                   ; Get current timestamp
    push                         ; Push timestamp to FIFO
.wrap

% c-sdk {
static inline void clockIN_program_init(PIO pio, uint sm, uint offset, uint pin) {
    pio_sm_config c = clockIN_program_get_default_config(offset);
    
    // Set the input pin
    pio_gpio_init(pio, pin);
    pio_sm_set_consecutive_pindirs(pio, sm, pin, 1, false);  // Set as input
    sm_config_set_in_pins(&c, pin);
    sm_config_set_jmp_pin(&c, pin);
    
    // Configure the state machine
    sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_TX); // Join FIFOs to increase size
    
    // Load the configuration and start the program
    pio_sm_init(pio, sm, offset, &c);
    pio_sm_set_enabled(pio, sm, true);
}
%}
